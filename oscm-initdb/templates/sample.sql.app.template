/*****************************************************************************
 *                                                                           *
 * Copyright FUJITSU LIMITED 2020                                            *
 *                                                                           *
 * Creation Date: 16-07-2020                                                 *
 *                                                                           *
 ****************************************************************************/
UPDATE ${DB_USER_APP}.configurationsetting SET settingvalue=10000 WHERE settingkey='BSS_USER_KEY' AND controllerid IN ('ess.aws','ess.openstack','ess.vmware', 'ess.azureARM', 'ess.shell', 'ess.sample', 'ess.approval');
UPDATE ${DB_USER_APP}.configurationsetting SET settingvalue='959c9bf7' WHERE settingkey='BSS_ORGANIZATION_ID' AND controllerid IN ('ess.aws','ess.openstack','ess.vmware', 'ess.azureARM', 'ess.shell', 'ess.sample', 'ess.approval');
UPDATE ${DB_USER_APP}.configurationsetting SET settingvalue='${CONTROLLER_USER_NAME}' WHERE settingkey='BSS_USER_ID' AND controllerid IN ('ess.aws','ess.openstack','ess.vmware', 'ess.azureARM', 'ess.shell', 'ess.sample', 'ess.approval');
UPDATE ${DB_USER_APP}.configurationsetting SET settingvalue='_crypt:${CONTROLLER_USER_PASS}' WHERE settingkey='BSS_USER_PWD' AND controllerid IN ('ess.aws','ess.openstack','ess.vmware', 'ess.azureARM', 'ess.shell', 'ess.sample', 'ess.approval');

INSERT INTO ${DB_USER_APP}.configurationsetting (controllerid, settingkey, settingvalue) VALUES ('ess.approval', 'APPROVAL_URL', 'https://${HOST_FQDN}:8881/approval/');

INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('TENANT_ID', '${OS_TENANT_ID}', 'ess.openstack');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('DOMAIN_NAME', '${OS_DOMAIN}', 'ess.openstack');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('KEYSTONE_API_URL', '${OS_KEYSTONE_URL}auth', 'ess.openstack');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('API_USER_NAME', '${OS_USER}', 'ess.openstack');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('TEMPLATE_BASE_URL', 'http://oscm-core:8080/templates/', 'ess.openstack');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('API_USER_PWD', '_crypt:${OS_PASSWORD}', 'ess.openstack');

INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ('VERSION', '1.0', 'ess.sample');
INSERT INTO ${DB_USER_APP}.configurationsetting (settingkey, settingvalue, controllerid) VALUES ( 'APP_PROVISIONING_ON_INSTANCE', 'false', 'ess.sample');

INSERT INTO ${DB_USER_APP}.customattribute (attributekey, attributevalue, organizationid, encrypted, controllerid) VALUES ('APPROVER_ORG_ID_d4e7e9f4', '959c9bf7', '959c9bf7', false, 'ess.approval');
INSERT INTO ${DB_USER_APP}.customattribute (attributekey, attributevalue, organizationid, encrypted, controllerid) VALUES ('USERID_d4e7e9f4', 'customer', '959c9bf7', false, 'ess.approval');
INSERT INTO ${DB_USER_APP}.customattribute (attributekey, attributevalue, organizationid, encrypted, controllerid) VALUES ('USERKEY_d4e7e9f4', '10001', '959c9bf7', false, 'ess.approval');
INSERT INTO ${DB_USER_APP}.customattribute (attributekey, attributevalue, organizationid, encrypted, controllerid) VALUES ('USERPWD_d4e7e9f4', 'zN2vhTT9L0Iwk+M3U3H6ow==:F53uzVVr/1rmuKj4HwjLsw==', '959c9bf7', true, 'ess.approval'); 

INSERT INTO ${DB_USER_APP}.serviceinstance (tkey, subscriptionid, organizationid, defaultlocale, besloginurl, organizationname, requesttime, provisioningstatus, instanceid, serviceaccessinfo, servicebaseurl, serviceloginpath, locked, runwithtimer, controllerid, instanceprovisioning, controllerready, rollbackparameters, version, suspendedbyapp, referenceid, rollbackinstanceattributes, vmsnumber) VALUES (1, 'AppApprovalService', '959c9bf7', 'en', NULL, 'supplierorg', 1604060984128, 'COMPLETED', 'Instance_1604060984111', 'Access information for instance Instance_1604060984111', NULL, NULL, false, true, 'ess.approval', false, true, NULL, 1, false, '', NULL, 0); 

INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (1, 1, 'APPROVER_ORG_ID_d4e7e9f4', '959c9bf7', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (2, 1, 'USER_ID_d4e7e9f4', 'customer', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (3, 1, 'USER_PWD_d4e7e9f4', 'dgsL60kUPiyoHScW8rOK2Q==:qx/EZeuS+QZu6lz/nKbOWg==', true);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (4, 1, 'APP_BSS_USER_PWD', 'supplier', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (5, 1, 'APP_BSS_USER', '10000', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (7, 1, 'USER_KEY_d4e7e9f4', '10001', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (8, 1, 'APP_CONTROLLER_ID', 'ess.approval', false);
INSERT INTO ${DB_USER_APP}.instanceparameter (tkey, serviceinstance_tkey, parameterkey, parametervalue, encrypted) VALUES (6, 1, 'STATE', 'FINISHED', false); 

UPDATE ${DB_USER_APP}.hibernate_sequences SET sequence_next_hi_value=1 WHERE sequence_name IN ('ServiceInstance', 'InstanceParameter');

\c vmware
INSERT INTO ${DB_USER_VMWARE}.vcenter (tkey, name, identifier, url, userid, password) VALUES (1, '${VCENTER_NAME}', '${VCENTER_NAME}', '', '', '');
INSERT INTO ${DB_USER_VMWARE}.datacenter (tkey, name, identifier, vcenter_tkey) VALUES (1, '${DATACENTER_NAME}', '${DATACENTER_NAME}', 1);
INSERT INTO ${DB_USER_VMWARE}.cluster (tkey, name, load_balancer, datacenter_tkey) VALUES (1, '${CLUSTER_NAME}', '<?xml version="1.0" encoding="UTF-8" standalone="no"?><essvcenter><balancer class="org.oscm.app.vmware.business.balancer.DynamicEquipartitionHostBalancer" cpuWeight="" memoryWeight="" vmWeight=""/></essvcenter>', 1);